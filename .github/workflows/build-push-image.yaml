name: Build and Push Docker image

on:
    push:
        branches: [ main ]

jobs:
  build-and-push-image:
    name: Build and Push Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Registry
        uses: azure/docker-login@v2
        with:
          login-server: pecarmoregistry.azurecr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get repository name
        id: repo
        run: echo "::set-output name=repo::$(basename ${{ github.repository }})"
      
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y.%m.%d')"
      
      - name: Build and push Docker image with 'latest' tag
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: pecarmoregistry.azurecr.io/${{ steps.repo.outputs.repo }}:latest
      
      - name: Build and push Docker image with CalVer tag
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: pecarmoregistry.azurecr.io/${{ steps.repo.outputs.repo }}:${{ steps.date.outputs.date }}

  apply-deployment:
    name: Apply deployment
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get repository name
        id: repo
        run: echo "::set-output name=repo::$(basename ${{ github.repository }})"
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Apply deployment
        run: |
            sed -i 's/EMAIL_SECRET_VALUE/${{ secrets.EMAIL }}/g' deployment.yaml
            sed -i 's/PASSWORD_SECRET_VALUE/${{ secrets.PASSWORD }}/g' deployment.yaml
            az aks get-credentials --resource-group infra-rg-neu --name pecarmoaks
            kubectl apply -f deployment.yaml
            kubectl rollout restart deployment/${{ steps.repo.outputs.repo }}-deployment